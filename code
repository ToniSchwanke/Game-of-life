import tkinter as tk
import numpy as np
from PIL import Image, ImageTk
import time

class GameOfLife:
    def __init__(self, root, size=(100, 100), cell_size=5):
        self.root = root
        self.size = size
        self.cell_size = cell_size
        self.width = size[0] * cell_size
        self.height = size[1] * cell_size
        self.canvas = tk.Canvas(root, width=self.width, height=self.height)
        self.canvas.pack()
        self.grid = np.random.choice([0, 1], size=size)
        self.running = False

    def draw_grid(self):
        self.canvas.delete("all")
        for i in range(self.size[0]):
            for j in range(self.size[1]):
                if self.grid[i, j] == 1:
                    x0 = j * self.cell_size
                    y0 = i * self.cell_size
                    x1 = x0 + self.cell_size
                    y1 = y0 + self.cell_size
                    self.canvas.create_rectangle(x0, y0, x1, y1, fill="black")

    def update_grid(self):
        new_grid = self.grid.copy()
        for i in range(self.size[0]):
            for j in range(self.size[1]):
                total = np.sum(self.grid[max(0, i-1):min(self.size[0], i+2), max(0, j-1):min(self.size[1], j+2)]) - self.grid[i, j]
                if self.grid[i, j] == 1:
                    if total < 2 or total > 3:
                        new_grid[i, j] = 0
                else:
                    if total == 3:
                        new_grid[i, j] = 1
        self.grid = new_grid

    def step(self):
        self.update_grid()
        self.draw_grid()

    def run(self):
        self.running = True
        while self.running:
            self.step()
            self.root.update()
            time.sleep(0.1)

    def stop(self):
        self.running = False

    def reset(self):
        self.grid = np.random.choice([0, 1], size=self.size)
        self.draw_grid()

def main():
    root = tk.Tk()
    root.title("Conway's Game of Life")
    game = GameOfLife(root)
    game.draw_grid()

    start_button = tk.Button(root, text="Start", command=game.run)
    start_button.pack(side='left')

    stop_button = tk.Button(root, text="Stop", command=game.stop)
    stop_button.pack(side='left')

    reset_button = tk.Button(root, text="Reset", command=game.reset)
    reset_button.pack(side='left')

    root.mainloop()

if __name__ == "__main__":
    main()
